<% @posts.each do |post| %>
  <div class="posts" data-lat="<%= post.latitude %>" data-lng="<%= post.longitude %>" data-msg="<%= post.message %>" data-pos="<%= post.positivity %>"></div>
<% end %>
<% @users.each do |user| %>
  <div class="movements" data-latl="<%= user.locations.last.latitude %>" data-lngl="<%= user.locations.last.longitude %>" data-latd="<%= user.destinations.last.latitude %>" data-lngd="<%= user.destinations.last.longitude %>"></div>
<% end %>

  <div id="multi_overlays multi_markers" style='width: 100%; height: 100%;'></div>

<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<script>
var handler = Gmaps.build('Google');
handler.buildMap({ internal: {id: 'multi_overlays multi_markers'}}, function(){
  var posts = document.getElementsByClassName("posts");
  var markers_array = [];
  var circles = [];
  var gircles = [];
  var circle_options = { strokeColor:"#FF0000",strokeOpacity: 0.5, strokeWeight: 3, fillColor: '#FF0000', fillOpacity: 0.35 }
  var gircle_options = { strokeColor:"#00aaaa",strokeOpacity: 0.5, strokeWeight: 3, fillColor: '#00aaaa', fillOpacity: 0.35 }
  for(var i = 0; i < posts.length; i++)
  {
     markers_array.push({lat: posts[i].getAttribute("data-lat"), lng: posts[i].getAttribute("data-lng"), infowindow: posts[i].getAttribute("data-msg")});
     if (posts[i].getAttribute("data-pos") < 0.6){
        circles.push({lng: posts[i].getAttribute("data-lng"), lat: posts[i].getAttribute("data-lat"), radius: 150000})
     } else {
        gircles.push({lng: posts[i].getAttribute("data-lng"), lat: posts[i].getAttribute("data-lat"), radius: 150000})
     }
  }
  var markers = handler.addMarkers(markers_array);

  var movements = document.getElementsByClassName("movements");
  var movements_array = [];
  for(var i = 0; i < movements.length; i++)
  {
     movements_array.push([{lat: movements[i].getAttribute("data-latl"), lng: movements[i].getAttribute("data-lngl") },{lat: movements[i].getAttribute("data-latd"), lng: movements[i].getAttribute("data-lngd") }]);
  }
  var polylines = handler.addPolylines(movements_array, { strokeColor: '#000000'});

  handler.bounds.extendWith(markers);
  handler.bounds.extendWith(polylines);
  handler.addCircles(circles, circle_options);
  handler.addCircles(gircles, gircle_options);
  handler.fitMapToBounds();
});
</script>